------------------------------------------------------------------------
OBJETIVO:
	Aprender a desarrollar una aplcación con angular Material
	
	Recursos:
	Angular Material 7 Tutorial: https://www.youtube.com/watch?v=n5kTqHmLtN8
------------------------------------------------------------------------

----------------------------------------
Versión: v0.0
	- Crear proyecto
	- Instalar y configurar Material
	- Abrir en VS Code
	- Crear repositorio
----------------------------------------


- Crear el proyecto: 
	- ng new angular-material7  -> OK 
	- npm start (Si falla la descarga o estoy recuperando una versión del git, para que  haga un build del proyecto)
	
- Abro pagina de material: https://material.angular.io/guide/getting-started
- Importo Material:
	- ng add @angular/material ->Ok. 
	Si edito package.json apareece la referencia a:
		"@angular/material": "^8.1.1"
		"@angular/cdk": "~8.1.1",
		"hammerjs": "^2.0.8",
	En angular.json, ha añadido el estilo de material:
		"styles": [
				  "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",	
	
	En src/styles.css ha añadido una fuente:
		body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
		
	En src/index.html ha añadido dos referencias:
		<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap" rel="stylesheet">
		<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
		
	En main.ts ha añadido: import 'hammerjs';
	
	Y por último, an app.module.ts ha agregado dos módulos:
		  imports: [
			BrowserModule,
			BrowserAnimationsModule
		
- Abro el proyecto con VS Code arrastrando al a carpeta del proyecto al editor.

- Creo el repositorio en local: git init
- Añado todos los componentes: git add *.*
- Hago commit: git commit -m "Initial version"
- Enlazo con repositorio remoto (Creado previamente con el mimo nombre)
	git remote add origin https://github.com/mgarmos/angular-material7.git
	git push -u origin master
- Creo la etiqueta de la versión V0.0: git tag -a v0.0 -m "my version 0.0"
- Subo al repositorio la etiqueta: git push origin v0.0



----------------------------------------
Versión: v0.1
	- Crear un botón con Material
	
Recusrsos:
	Button - Angular Material: https://material.angular.io/components/button/overview
----------------------------------------

- Importo el módulo en app.module.ts:
	import { MatButtonModule } from '@angular/material';
	Añado en imports: MatButtonModule
	
- Limpio app.component.html: Dejo únicamente la imagen de ángular
- Creo un botón con uno de los estilos de Material: <button mat-button>ClickMe!</button>

		Attribute 	Description
		mat-button 	Rectangular text button w/ no elevation
		mat-raised-button 	Rectangular contained button w/ elevation
		mat-flat-button 	Rectangular contained button w/ no elevation
		mat-stroked-button 	Rectangular outlined button w/ no elevation
		mat-icon-button 	Circular button with a transparent background, meant to contain an icon
		mat-fab 	Circular button w/ elevation, defaults to theme's accent color
		mat-mini-fab 	Same as mat-fab but smaller
		
- Para facilitar la importación y la visibilidad de módulos de Material, creo el material.module.ts:
			import { NgModule } from '@angular/core';
			import {
				MatButtonModule 
			} from '@angular/material';
			@NgModule({
				imports: [
					MatButtonModule
				],
				exports: [
					MatButtonModule
				]
			})  
			export class MaterialModule { }
- Una vez declarado, modifico app.module.ts para que referencie a material.module.ts
	- Elimino la importación de material: import { MatButtonModule } from '@angular/material';
	- Importo la clase MaterilaModule.
- Pruebo -> Ok

----------------------------------------
Versión: v0.2
	- Crear un servicio que recoja datos de un API
	
Recusrsos:
	API: https://jsonplaceholder.typicode.com/photos
----------------------------------------

- Creo un servicio que se llame photos en la carpeta services: ng g s services/photos 
	- Crea el servicio y la clase de pueba del servicio :
		CREATE src/app/services/photos.service.spec.ts (333 bytes)
		CREATE src/app/services/photos.service.ts (135 bytes)
	Notas
		- Un servicio es una clase que podemos reutilizar, para no tener que repetir código
		- El servicio tiene un decoradod llamado @Injectable({ providedIn: 'root' }) que dice que la clase es visible desde root, es decir, para toda la aplicación. Es
			como si se hubiera importado en app.module.ts
		- El servicio llamará a una API y recogera los valores porporcionado. Para ello utilizaremos el modulo HttpClient del módulo @Angular/common/http
		
		
- En el servicio:
	- importo la clase HttpClient:
	- Añado la clase en el import
	- Se la paseo al constructor para que pueda utilizarla
	- Creo el método getPhotos() que llame al API y devuelva cinco registros: return this.http.get('https://jsonplaceholder.typicode.com/photos?_limit=5');
	
- En app.component.ts (Importo el servicio y configuro para que recoja la información nada más cargar
	- Importo el servicio
	- Importo el módulo httpClientModule que lo utilizará el servicio
	- Creo el constructor y le paso como parámetro el servicio.
	- Implemento onInit y creo el método ngOnInit()
	
	- En el método ngOnInit(): void :
		- Llamo al servicio y recojo los datos a través de suscribe, que devuelve, si todo ha ido bien, los datos, y si no, un error. Todo ello lo envío a consola
	
- En app.module.ts importo el módulo httpClientModule

- Pruebo -> Ok. En la consola aprece los cinco objetos recogidos de la API
